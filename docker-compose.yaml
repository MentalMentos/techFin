services:
  pg:
    image: postgres:14-alpine3.17
    environment:
      - POSTGRES_DB=${PG_DATABASE_NAME}
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${PG_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    ports:
      - "${REDIS_PORT}:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrations:
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      pg:
        condition: service_healthy
    environment:
      - PG_DATABASE_NAME=${PG_DATABASE_NAME}
      - PG_USER=${PG_USER}
      - PG_PASSWORD=${PG_PASSWORD}
      - MIGRATION_DIR=${MIGRATION_DIR}
    restart: always

  app:
    build: .
    environment:
      - PG_DSN=${PG_DSN}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - APP_PORT=${APP_PORT}
    depends_on:
      migrations:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    ports:
      - "${APP_PORT}:8080"
    command: ["go", "run", "cmd/app/main.go"]

volumes:
  postgres_data:
